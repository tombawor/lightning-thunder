import torch
from nvfuser import FusionDefinition, DataType


def nvfuser_fusion_id0(fd: FusionDefinition) -> None:
    T0 = fd.define_tensor(shape=[-1], contiguity=[True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[0])
    T1 = fd.define_tensor(
        shape=[-1, -1], contiguity=[True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[1, 0]
    )
    T2 = fd.define_tensor(shape=[-1], contiguity=[True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[0])
    T3 = fd.define_tensor(
        shape=[-1, -1], contiguity=[True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[1, 0]
    )
    T4 = fd.define_tensor(shape=[-1], contiguity=[True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[0])
    T5 = fd.define_tensor(shape=[-1], contiguity=[True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[0])
    T6 = fd.define_tensor(shape=[-1], contiguity=[True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[0])
    T7 = fd.define_tensor(shape=[-1], contiguity=[True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[0])
    T8 = fd.define_tensor(shape=[-1], contiguity=[True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[0])
    T9 = fd.define_tensor(
        shape=[-1, -1], contiguity=[True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[1, 0]
    )
    T10 = fd.define_tensor(shape=[-1], contiguity=[True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[0])
    T11 = fd.define_tensor(
        shape=[-1, -1], contiguity=[True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[1, 0]
    )
    T12 = fd.define_tensor(
        shape=[-1, -1, -1], contiguity=[True, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0]
    )
    T13 = fd.ops.cast(T12, dtype=DataType.Float)
    T14, T15 = fd.ops.var_mean(T13, dims=[2], correction=0, keepdim=False)
    S16 = fd.define_scalar(16, dtype=DataType.Int)
    S17 = fd.define_scalar(128, dtype=DataType.Int)
    S18 = fd.define_scalar(1, dtype=DataType.Int)
    V19 = fd.define_vector([S16, S17, S18], dtype=DataType.Int)
    T20 = fd.ops.broadcast_in_dim(T14, shape=V19, broadcast_dims=[0, 1])
    S21 = fd.define_scalar(16, dtype=DataType.Int)
    S22 = fd.define_scalar(128, dtype=DataType.Int)
    S23 = fd.define_scalar(1, dtype=DataType.Int)
    V24 = fd.define_vector([S21, S22, S23], dtype=DataType.Int)
    T25 = fd.ops.broadcast_in_dim(T15, shape=V24, broadcast_dims=[0, 1])
    S26 = fd.define_scalar(1.00000e-05, dtype=DataType.Double)
    T27 = fd.ops.add(T20, S26)
    T28 = fd.ops.rsqrt(T27)
    S29 = fd.define_scalar(16, dtype=DataType.Int)
    S30 = fd.define_scalar(128, dtype=DataType.Int)
    S31 = fd.define_scalar(1600, dtype=DataType.Int)
    V32 = fd.define_vector([S29, S30, S31], dtype=DataType.Int)
    T33 = fd.ops.broadcast_in_dim(T25, shape=V32, broadcast_dims=[0, 1, 2])
    T34 = fd.ops.sub(T13, T33)
    S35 = fd.define_scalar(16, dtype=DataType.Int)
    S36 = fd.define_scalar(128, dtype=DataType.Int)
    S37 = fd.define_scalar(1600, dtype=DataType.Int)
    V38 = fd.define_vector([S35, S36, S37], dtype=DataType.Int)
    T39 = fd.ops.broadcast_in_dim(T28, shape=V38, broadcast_dims=[0, 1, 2])
    T40 = fd.ops.mul(T34, T39)
    S41 = fd.define_scalar(16, dtype=DataType.Int)
    S42 = fd.define_scalar(128, dtype=DataType.Int)
    S43 = fd.define_scalar(1600, dtype=DataType.Int)
    V44 = fd.define_vector([S41, S42, S43], dtype=DataType.Int)
    T45 = fd.ops.broadcast_in_dim(T5, shape=V44, broadcast_dims=[2])
    T46 = fd.ops.cast(T45, dtype=DataType.Float)
    T47 = fd.ops.mul(T40, T46)
    S48 = fd.define_scalar(16, dtype=DataType.Int)
    S49 = fd.define_scalar(128, dtype=DataType.Int)
    S50 = fd.define_scalar(1600, dtype=DataType.Int)
    V51 = fd.define_vector([S48, S49, S50], dtype=DataType.Int)
    T52 = fd.ops.broadcast_in_dim(T4, shape=V51, broadcast_dims=[2])
    T53 = fd.ops.cast(T52, dtype=DataType.Float)
    T54 = fd.ops.add(T47, T53)
    T55 = fd.ops.cast(T54, dtype=DataType.BFloat16)
    S56 = fd.define_scalar(2048, dtype=DataType.Int)
    S57 = fd.define_scalar(1600, dtype=DataType.Int)
    V58 = fd.define_vector([S56, S57], dtype=DataType.Int)
    T59 = fd.ops.reshape(T55, new_shape=V58)
    T60 = fd.ops.linear(T59, T1, T0)
    S61 = fd.define_scalar(16, dtype=DataType.Int)
    S62 = fd.define_scalar(128, dtype=DataType.Int)
    S63 = fd.define_scalar(4800, dtype=DataType.Int)
    V64 = fd.define_vector([S61, S62, S63], dtype=DataType.Int)
    T65 = fd.ops.reshape(T60, new_shape=V64)
    T66 = fd.ops.slice(T65, start_indices=[0, 0, 0], end_indices=[16, 128, 1600], strides=[1, 1, 1])
    T67 = fd.ops.slice(T65, start_indices=[0, 0, 1600], end_indices=[16, 128, 3200], strides=[1, 1, 1])
    T68 = fd.ops.slice(T65, start_indices=[0, 0, 3200], end_indices=[16, 128, 4800], strides=[1, 1, 1])
    S69 = fd.define_scalar(16, dtype=DataType.Int)
    S70 = fd.define_scalar(128, dtype=DataType.Int)
    S71 = fd.define_scalar(25, dtype=DataType.Int)
    S72 = fd.define_scalar(64, dtype=DataType.Int)
    V73 = fd.define_vector([S69, S70, S71, S72], dtype=DataType.Int)
    T74 = fd.ops.reshape(T67, new_shape=V73)
    T75 = fd.ops.permute(T74, dims=[0, 2, 1, 3])
    S76 = fd.define_scalar(16, dtype=DataType.Int)
    S77 = fd.define_scalar(128, dtype=DataType.Int)
    S78 = fd.define_scalar(25, dtype=DataType.Int)
    S79 = fd.define_scalar(64, dtype=DataType.Int)
    V80 = fd.define_vector([S76, S77, S78, S79], dtype=DataType.Int)
    T81 = fd.ops.reshape(T66, new_shape=V80)
    T82 = fd.ops.permute(T81, dims=[0, 2, 1, 3])
    S83 = fd.define_scalar(16, dtype=DataType.Int)
    S84 = fd.define_scalar(128, dtype=DataType.Int)
    S85 = fd.define_scalar(25, dtype=DataType.Int)
    S86 = fd.define_scalar(64, dtype=DataType.Int)
    V87 = fd.define_vector([S83, S84, S85, S86], dtype=DataType.Int)
    T88 = fd.ops.reshape(T68, new_shape=V87)
    T89 = fd.ops.permute(T88, dims=[0, 2, 1, 3])
    T90 = fd.ops.cast(T82, dtype=DataType.Float)
    S91 = fd.define_scalar(0.353553, dtype=DataType.Double)
    T92 = fd.ops.mul(T90, S91)
    T93 = fd.ops.cast(T92, dtype=DataType.BFloat16)
    T94 = fd.ops.permute(T75, dims=[0, 1, 3, 2])
    T95 = fd.ops.cast(T94, dtype=DataType.Float)
    S96 = fd.define_scalar(0.353553, dtype=DataType.Double)
    T97 = fd.ops.mul(T95, S96)
    T98 = fd.ops.cast(T97, dtype=DataType.BFloat16)
    T99 = fd.ops.matmul(T93, T98)
    S100 = fd.define_scalar(128, dtype=DataType.Int)
    S101 = fd.define_scalar(0, dtype=DataType.Int)
    S102 = fd.define_scalar(1, dtype=DataType.Int)
    T103 = fd.ops.iota(S100, S101, S102, dtype=DataType.Int)
    S104 = fd.define_scalar(128, dtype=DataType.Int)
    S105 = fd.define_scalar(1, dtype=DataType.Int)
    V106 = fd.define_vector([S104, S105], dtype=DataType.Int)
    T107 = fd.ops.broadcast_in_dim(T103, shape=V106, broadcast_dims=[0])
    S108 = fd.define_scalar(128, dtype=DataType.Int)
    S109 = fd.define_scalar(0, dtype=DataType.Int)
    S110 = fd.define_scalar(1, dtype=DataType.Int)
    T111 = fd.ops.iota(S108, S109, S110, dtype=DataType.Int)
    S112 = fd.define_scalar(1, dtype=DataType.Int)
    S113 = fd.define_scalar(128, dtype=DataType.Int)
    V114 = fd.define_vector([S112, S113], dtype=DataType.Int)
    T115 = fd.ops.broadcast_in_dim(T111, shape=V114, broadcast_dims=[1])
    S116 = fd.define_scalar(0, dtype=DataType.Int)
    T117 = fd.ops.add(T107, S116)
    S118 = fd.define_scalar(128, dtype=DataType.Int)
    S119 = fd.define_scalar(128, dtype=DataType.Int)
    V120 = fd.define_vector([S118, S119], dtype=DataType.Int)
    T121 = fd.ops.broadcast_in_dim(T117, shape=V120, broadcast_dims=[0, 1])
    S122 = fd.define_scalar(128, dtype=DataType.Int)
    S123 = fd.define_scalar(128, dtype=DataType.Int)
    V124 = fd.define_vector([S122, S123], dtype=DataType.Int)
    T125 = fd.ops.broadcast_in_dim(T115, shape=V124, broadcast_dims=[0, 1])
    T126 = fd.ops.ge(T121, T125)
    S127 = fd.define_scalar(16, dtype=DataType.Int)
    S128 = fd.define_scalar(25, dtype=DataType.Int)
    S129 = fd.define_scalar(128, dtype=DataType.Int)
    S130 = fd.define_scalar(128, dtype=DataType.Int)
    V131 = fd.define_vector([S127, S128, S129, S130], dtype=DataType.Int)
    T132 = fd.ops.broadcast_in_dim(T126, shape=V131, broadcast_dims=[2, 3])
    S133 = fd.define_scalar(float("-inf"), dtype=DataType.Double)
    T134 = fd.ops.where(T132, T99, S133)
    T135 = fd.ops.cast(T134, dtype=DataType.Float)
    T136 = fd.ops.max(T135, dims=[3], keepdim=False, dtype=DataType.Null)
    S137 = fd.define_scalar(16, dtype=DataType.Int)
    S138 = fd.define_scalar(25, dtype=DataType.Int)
    S139 = fd.define_scalar(128, dtype=DataType.Int)
    S140 = fd.define_scalar(1, dtype=DataType.Int)
    V141 = fd.define_vector([S137, S138, S139, S140], dtype=DataType.Int)
    T142 = fd.ops.broadcast_in_dim(T136, shape=V141, broadcast_dims=[0, 1, 2])
    S143 = fd.define_scalar(16, dtype=DataType.Int)
    S144 = fd.define_scalar(25, dtype=DataType.Int)
    S145 = fd.define_scalar(128, dtype=DataType.Int)
    S146 = fd.define_scalar(128, dtype=DataType.Int)
    V147 = fd.define_vector([S143, S144, S145, S146], dtype=DataType.Int)
    T148 = fd.ops.broadcast_in_dim(T142, shape=V147, broadcast_dims=[0, 1, 2, 3])
    T149 = fd.ops.sub(T135, T148)
    T150 = fd.ops.exp(T149)
    T151 = fd.ops.sum(T150, dims=[3], keepdim=False, dtype=DataType.Null)
    S152 = fd.define_scalar(16, dtype=DataType.Int)
    S153 = fd.define_scalar(25, dtype=DataType.Int)
    S154 = fd.define_scalar(128, dtype=DataType.Int)
    S155 = fd.define_scalar(1, dtype=DataType.Int)
    V156 = fd.define_vector([S152, S153, S154, S155], dtype=DataType.Int)
    T157 = fd.ops.broadcast_in_dim(T151, shape=V156, broadcast_dims=[0, 1, 2])
    S158 = fd.define_scalar(16, dtype=DataType.Int)
    S159 = fd.define_scalar(25, dtype=DataType.Int)
    S160 = fd.define_scalar(128, dtype=DataType.Int)
    S161 = fd.define_scalar(128, dtype=DataType.Int)
    V162 = fd.define_vector([S158, S159, S160, S161], dtype=DataType.Int)
    T163 = fd.ops.broadcast_in_dim(T157, shape=V162, broadcast_dims=[0, 1, 2, 3])
    T164 = fd.ops.reciprocal(T163)
    T165 = fd.ops.mul(T150, T164)
    S166 = fd.define_scalar(0.00000, dtype=DataType.Double)
    S167 = fd.define_scalar(1.00000, dtype=DataType.Double)
    S168 = fd.define_scalar(16, dtype=DataType.Int)
    S169 = fd.define_scalar(25, dtype=DataType.Int)
    S170 = fd.define_scalar(128, dtype=DataType.Int)
    S171 = fd.define_scalar(128, dtype=DataType.Int)
    V172 = fd.define_vector([S168, S169, S170, S171], dtype=DataType.Int)
    T173 = fd.ops.uniform(S166, S167, shape=V172, dtype=DataType.BFloat16)
    S174 = fd.define_scalar(0.900000, dtype=DataType.Double)
    T175 = fd.ops.lt(T173, S174)
    T176 = fd.ops.cast(T175, dtype=DataType.Float)
    T177 = fd.ops.mul(T165, T176)
    S178 = fd.define_scalar(1.11111, dtype=DataType.Double)
    T179 = fd.ops.mul(T177, S178)
    T180 = fd.ops.cast(T179, dtype=DataType.BFloat16)
    T181 = fd.ops.matmul(T180, T89)
    T182 = fd.ops.permute(T181, dims=[0, 2, 1, 3])
    T183 = fd.ops.stride_order(T182, stride_order=[3, 2, 1, 0])
    S184 = fd.define_scalar(16, dtype=DataType.Int)
    S185 = fd.define_scalar(128, dtype=DataType.Int)
    S186 = fd.define_scalar(1600, dtype=DataType.Int)
    V187 = fd.define_vector([S184, S185, S186], dtype=DataType.Int)
    T188 = fd.ops.reshape(T183, new_shape=V187)
    S189 = fd.define_scalar(2048, dtype=DataType.Int)
    S190 = fd.define_scalar(1600, dtype=DataType.Int)
    V191 = fd.define_vector([S189, S190], dtype=DataType.Int)
    T192 = fd.ops.reshape(T188, new_shape=V191)
    T193 = fd.ops.linear(T192, T3, T2)
    S194 = fd.define_scalar(16, dtype=DataType.Int)
    S195 = fd.define_scalar(128, dtype=DataType.Int)
    S196 = fd.define_scalar(1600, dtype=DataType.Int)
    V197 = fd.define_vector([S194, S195, S196], dtype=DataType.Int)
    T198 = fd.ops.reshape(T193, new_shape=V197)
    S199 = fd.define_scalar(0.00000, dtype=DataType.Double)
    S200 = fd.define_scalar(1.00000, dtype=DataType.Double)
    S201 = fd.define_scalar(16, dtype=DataType.Int)
    S202 = fd.define_scalar(128, dtype=DataType.Int)
    S203 = fd.define_scalar(1600, dtype=DataType.Int)
    V204 = fd.define_vector([S201, S202, S203], dtype=DataType.Int)
    T205 = fd.ops.uniform(S199, S200, shape=V204, dtype=DataType.BFloat16)
    S206 = fd.define_scalar(0.900000, dtype=DataType.Double)
    T207 = fd.ops.lt(T205, S206)
    T208 = fd.ops.cast(T198, dtype=DataType.Float)
    T209 = fd.ops.cast(T207, dtype=DataType.Float)
    T210 = fd.ops.mul(T208, T209)
    S211 = fd.define_scalar(1.11111, dtype=DataType.Double)
    T212 = fd.ops.mul(T210, S211)
    T213 = fd.ops.add(T13, T212)
    T214, T215 = fd.ops.var_mean(T213, dims=[2], correction=0, keepdim=False)
    S216 = fd.define_scalar(16, dtype=DataType.Int)
    S217 = fd.define_scalar(128, dtype=DataType.Int)
    S218 = fd.define_scalar(1, dtype=DataType.Int)
    V219 = fd.define_vector([S216, S217, S218], dtype=DataType.Int)
    T220 = fd.ops.broadcast_in_dim(T214, shape=V219, broadcast_dims=[0, 1])
    S221 = fd.define_scalar(16, dtype=DataType.Int)
    S222 = fd.define_scalar(128, dtype=DataType.Int)
    S223 = fd.define_scalar(1, dtype=DataType.Int)
    V224 = fd.define_vector([S221, S222, S223], dtype=DataType.Int)
    T225 = fd.ops.broadcast_in_dim(T215, shape=V224, broadcast_dims=[0, 1])
    S226 = fd.define_scalar(1.00000e-05, dtype=DataType.Double)
    T227 = fd.ops.add(T220, S226)
    T228 = fd.ops.rsqrt(T227)
    S229 = fd.define_scalar(16, dtype=DataType.Int)
    S230 = fd.define_scalar(128, dtype=DataType.Int)
    S231 = fd.define_scalar(1600, dtype=DataType.Int)
    V232 = fd.define_vector([S229, S230, S231], dtype=DataType.Int)
    T233 = fd.ops.broadcast_in_dim(T225, shape=V232, broadcast_dims=[0, 1, 2])
    T234 = fd.ops.sub(T213, T233)
    S235 = fd.define_scalar(16, dtype=DataType.Int)
    S236 = fd.define_scalar(128, dtype=DataType.Int)
    S237 = fd.define_scalar(1600, dtype=DataType.Int)
    V238 = fd.define_vector([S235, S236, S237], dtype=DataType.Int)
    T239 = fd.ops.broadcast_in_dim(T228, shape=V238, broadcast_dims=[0, 1, 2])
    T240 = fd.ops.mul(T234, T239)
    S241 = fd.define_scalar(16, dtype=DataType.Int)
    S242 = fd.define_scalar(128, dtype=DataType.Int)
    S243 = fd.define_scalar(1600, dtype=DataType.Int)
    V244 = fd.define_vector([S241, S242, S243], dtype=DataType.Int)
    T245 = fd.ops.broadcast_in_dim(T7, shape=V244, broadcast_dims=[2])
    T246 = fd.ops.cast(T245, dtype=DataType.Float)
    T247 = fd.ops.mul(T240, T246)
    S248 = fd.define_scalar(16, dtype=DataType.Int)
    S249 = fd.define_scalar(128, dtype=DataType.Int)
    S250 = fd.define_scalar(1600, dtype=DataType.Int)
    V251 = fd.define_vector([S248, S249, S250], dtype=DataType.Int)
    T252 = fd.ops.broadcast_in_dim(T6, shape=V251, broadcast_dims=[2])
    T253 = fd.ops.cast(T252, dtype=DataType.Float)
    T254 = fd.ops.add(T247, T253)
    T255 = fd.ops.cast(T254, dtype=DataType.BFloat16)
    S256 = fd.define_scalar(2048, dtype=DataType.Int)
    S257 = fd.define_scalar(1600, dtype=DataType.Int)
    V258 = fd.define_vector([S256, S257], dtype=DataType.Int)
    T259 = fd.ops.reshape(T255, new_shape=V258)
    T260 = fd.ops.linear(T259, T9, T8)
    S261 = fd.define_scalar(16, dtype=DataType.Int)
    S262 = fd.define_scalar(128, dtype=DataType.Int)
    S263 = fd.define_scalar(6400, dtype=DataType.Int)
    V264 = fd.define_vector([S261, S262, S263], dtype=DataType.Int)
    T265 = fd.ops.reshape(T260, new_shape=V264)
    T266 = fd.ops.cast(T265, dtype=DataType.Float)
    T267 = fd.ops.mul(T266, T266)
    T268 = fd.ops.mul(T267, T266)
    S269 = fd.define_scalar(0.500000, dtype=DataType.Double)
    T270 = fd.ops.mul(S269, T266)
    S271 = fd.define_scalar(0.0447150, dtype=DataType.Double)
    T272 = fd.ops.mul(S271, T268)
    T273 = fd.ops.add(T266, T272)
    S274 = fd.define_scalar(0.797885, dtype=DataType.Double)
    T275 = fd.ops.mul(S274, T273)
    T276 = fd.ops.tanh(T275)
    S277 = fd.define_scalar(1.00000, dtype=DataType.Double)
    T278 = fd.ops.add(S277, T276)
    T279 = fd.ops.mul(T270, T278)
    T280 = fd.ops.cast(T279, dtype=DataType.BFloat16)
    S281 = fd.define_scalar(2048, dtype=DataType.Int)
    S282 = fd.define_scalar(6400, dtype=DataType.Int)
    V283 = fd.define_vector([S281, S282], dtype=DataType.Int)
    T284 = fd.ops.reshape(T280, new_shape=V283)
    T285 = fd.ops.linear(T284, T11, T10)
    S286 = fd.define_scalar(16, dtype=DataType.Int)
    S287 = fd.define_scalar(128, dtype=DataType.Int)
    S288 = fd.define_scalar(1600, dtype=DataType.Int)
    V289 = fd.define_vector([S286, S287, S288], dtype=DataType.Int)
    T290 = fd.ops.reshape(T285, new_shape=V289)
    S291 = fd.define_scalar(0.00000, dtype=DataType.Double)
    S292 = fd.define_scalar(1.00000, dtype=DataType.Double)
    S293 = fd.define_scalar(16, dtype=DataType.Int)
    S294 = fd.define_scalar(128, dtype=DataType.Int)
    S295 = fd.define_scalar(1600, dtype=DataType.Int)
    V296 = fd.define_vector([S293, S294, S295], dtype=DataType.Int)
    T297 = fd.ops.uniform(S291, S292, shape=V296, dtype=DataType.BFloat16)
    S298 = fd.define_scalar(0.900000, dtype=DataType.Double)
    T299 = fd.ops.lt(T297, S298)
    T300 = fd.ops.cast(T290, dtype=DataType.Float)
    T301 = fd.ops.cast(T299, dtype=DataType.Float)
    T302 = fd.ops.mul(T300, T301)
    S303 = fd.define_scalar(1.11111, dtype=DataType.Double)
    T304 = fd.ops.mul(T302, S303)
    T305 = fd.ops.add(T213, T304)
    T306 = fd.ops.cast(T305, dtype=DataType.BFloat16)
    fd.add_output(T306)


with FusionDefinition() as fd:
    nvfuser_fusion_id0(fd)

inputs = [
    torch.randn((4800,), dtype=torch.bfloat16, device="cuda:0").as_strided((4800,), (1,)),
    torch.randn((7680000,), dtype=torch.bfloat16, device="cuda:0").as_strided((4800, 1600), (1600, 1)),
    torch.randn((1600,), dtype=torch.bfloat16, device="cuda:0").as_strided((1600,), (1,)),
    torch.randn((2560000,), dtype=torch.bfloat16, device="cuda:0").as_strided((1600, 1600), (1600, 1)),
    torch.randn((1600,), dtype=torch.bfloat16, device="cuda:0").as_strided((1600,), (1,)),
    torch.randn((1600,), dtype=torch.bfloat16, device="cuda:0").as_strided((1600,), (1,)),
    torch.randn((1600,), dtype=torch.bfloat16, device="cuda:0").as_strided((1600,), (1,)),
    torch.randn((1600,), dtype=torch.bfloat16, device="cuda:0").as_strided((1600,), (1,)),
    torch.randn((6400,), dtype=torch.bfloat16, device="cuda:0").as_strided((6400,), (1,)),
    torch.randn((10240000,), dtype=torch.bfloat16, device="cuda:0").as_strided((6400, 1600), (1600, 1)),
    torch.randn((1600,), dtype=torch.bfloat16, device="cuda:0").as_strided((1600,), (1,)),
    torch.randn((10240000,), dtype=torch.bfloat16, device="cuda:0").as_strided((1600, 6400), (6400, 1)),
    torch.randn((3276800,), dtype=torch.bfloat16, device="cuda:0").as_strided((16, 128, 1600), (204800, 1600, 1)),
]
fd.execute(inputs)
